{"ast":null,"code":"var _jsxFileName = \"E:\\\\College Projects\\\\ecommerce\\\\ecommerce\\\\store\\\\src\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { productsArray, getProductData } from \"./productsStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  items: [],\n  getProductQuantity: () => {},\n  addOneToCart: () => {},\n  removeOneFromCart: () => {},\n  deleteFromCart: () => {},\n  getTotalCost: () => {}\n});\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [cartProducts, setCartProducts] = useState([]);\n\n  // [ { id: 1 , quantity: 3 }, { id: 2, quantity: 1 } ]\n\n  function getProductQuantity(id) {\n    var _cartProducts$find;\n    const quantity = (_cartProducts$find = cartProducts.find(product => product.id === id)) === null || _cartProducts$find === void 0 ? void 0 : _cartProducts$find.quantity;\n    if (quantity === undefined) {\n      return 0;\n    }\n    return quantity;\n  }\n  function addOneToCart(id) {\n    const quantity = getProductQuantity(id);\n    if (quantity === 0) {\n      // product is not in cart\n      setCartProducts([...cartProducts, {\n        id: id,\n        quantity: 1\n      }]);\n    } else {\n      // product is in cart\n      // [ { id: 1 , quantity: 3 }, { id: 2, quantity: 1 } ]    add to product id of 2\n      setCartProducts(cartProducts.map(product => product.id === id // if condition\n      ? {\n        ...product,\n        quantity: product.quantity + 1\n      } // if statement is true\n      : product // if statement is false\n      ));\n    }\n  }\n\n  function removeOneFromCart(id) {\n    const quantity = getProductQuantity(id);\n    if (quantity == 1) {\n      deleteFromCart(id);\n    } else {\n      setCartProducts(cartProducts.map(product => product.id === id // if condition\n      ? {\n        ...product,\n        quantity: product.quantity - 1\n      } // if statement is true\n      : product // if statement is false\n      ));\n    }\n  }\n\n  function deleteFromCart(id) {\n    // [] if an object meets a condition, add the object to array\n    // [product1, product2, product3]\n    // [product1, product3]\n    setCartProducts(cartProducts => cartProducts.filter(currentProduct => {\n      return currentProduct.id != id;\n    }));\n  }\n  function getTotalCost() {\n    let totalCost = 0;\n    cartProducts.map(cartItem => {\n      const productData = getProductData(cartItem.id);\n      totalCost += productData.price * cartItem.quantity;\n    });\n    return totalCost;\n  }\n  const contextValue = {\n    items: cartProducts,\n    getProductQuantity,\n    addOneToCart,\n    removeOneFromCart,\n    deleteFromCart,\n    getTotalCost\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 13\n  }, this);\n}\n_s(CartProvider, \"U6A359Ie+N1Isul8547a+XNDaDk=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","productsArray","getProductData","jsxDEV","_jsxDEV","CartContext","items","getProductQuantity","addOneToCart","removeOneFromCart","deleteFromCart","getTotalCost","CartProvider","children","_s","cartProducts","setCartProducts","id","_cartProducts$find","quantity","find","product","undefined","map","filter","currentProduct","totalCost","cartItem","productData","price","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/College Projects/ecommerce/ecommerce/store/src/CartContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport { productsArray, getProductData } from \"./productsStore\";\n\n\nexport const CartContext = createContext({\n    items: [],\n    getProductQuantity: () => {},\n    addOneToCart: () => {},\n    removeOneFromCart: () => {},\n    deleteFromCart: () => {},\n    getTotalCost: () => {}\n});\n\nexport function CartProvider({children}) {\n    const [cartProducts, setCartProducts] = useState([]);\n    \n    // [ { id: 1 , quantity: 3 }, { id: 2, quantity: 1 } ]\n\n    function getProductQuantity(id) {\n        const quantity = cartProducts.find(product => product.id === id)?.quantity;\n        \n        if (quantity === undefined) {\n            return 0;\n        }\n        return quantity;\n    }\n    function addOneToCart(id) {\n        const quantity = getProductQuantity(id);\n\n        if (quantity === 0) { // product is not in cart\n            setCartProducts(\n                [\n                    ...cartProducts,\n                    {\n                        id: id,\n                        quantity: 1\n                    }\n                ]\n            )\n        } else { // product is in cart\n            // [ { id: 1 , quantity: 3 }, { id: 2, quantity: 1 } ]    add to product id of 2\n            setCartProducts(\n                cartProducts.map(\n                    product =>\n                    product.id === id                                // if condition\n                    ? { ...product, quantity: product.quantity + 1 } // if statement is true\n                    : product                                        // if statement is false\n                )\n            )\n        }\n    }\n    function removeOneFromCart(id) {\n        const quantity = getProductQuantity(id);\n\n        if(quantity == 1) {\n            deleteFromCart(id);\n        } else {\n            setCartProducts(\n                cartProducts.map(\n                    product =>\n                    product.id === id                                // if condition\n                    ? { ...product, quantity: product.quantity - 1 } // if statement is true\n                    : product                                        // if statement is false\n                )\n            )\n        }\n    }\n    function deleteFromCart(id) {\n        // [] if an object meets a condition, add the object to array\n        // [product1, product2, product3]\n        // [product1, product3]\n        setCartProducts(\n            cartProducts =>\n            cartProducts.filter(currentProduct => {\n                return currentProduct.id != id;\n            })  \n        )\n    }\n    function getTotalCost() {\n        let totalCost = 0;\n        cartProducts.map((cartItem) => {\n            const productData = getProductData(cartItem.id);\n            totalCost += (productData.price * cartItem.quantity);\n        });\n        return totalCost;\n    }\n        \n        const contextValue = {\n            items: cartProducts,\n            getProductQuantity,\n            addOneToCart,\n            removeOneFromCart,\n            deleteFromCart,\n            getTotalCost\n        }\n        return (\n            <CartContext.Provider value={contextValue}>\n                {children}\n            </CartContext.Provider>\n        ) \n    }\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}